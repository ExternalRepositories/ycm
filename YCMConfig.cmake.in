set(YCM_VERSION @YCM_VERSION@)

@PACKAGE_INIT@

set_and_check(YCM_MODULE_DIR "@PACKAGE_YCM_MODULE_DIR@")
check_required_components(YCM)

list(APPEND YCM_MODULE_PATH "${YCM_MODULE_DIR}/modules")
list(APPEND YCM_MODULE_PATH "${YCM_MODULE_DIR}/find-modules")
list(APPEND YCM_MODULE_PATH "${YCM_MODULE_DIR}/build-modules")

# "Newer modules should be found earlier in case of files with the same name,
# therefore the order is
#  - proposed
#  - next
#  - old releases (newer releases first)
#  - deprecated
option(YCM_USE_CMAKE_PROPOSED "Use modules including unmerged CMake patches" OFF)
mark_as_advanced(YCM_USE_CMAKE_PROPOSED)
if(YCM_USE_CMAKE_PROPOSED)
    list(APPEND YCM_MODULE_PATH "${YCM_MODULE_DIR}/cmake-proposed/Modules")
endif()

option(YCM_USE_CMAKE_NEXT "Use modules from unreleased CMake" ON)
mark_as_advanced(YCM_USE_CMAKE_NEXT)
if(YCM_USE_CMAKE_NEXT)
    list(APPEND YCM_MODULE_PATH "${YCM_MODULE_DIR}/cmake-next/Modules")
endif()

if(EXISTS "${YCM_MODULE_DIR}/cmake-3.0.0"
   AND CMAKE_MINIMUM_REQUIRED_VERSION VERSION_LESS 3.0.0
   AND CMAKE_VERSION VERSION_LESS 3.0.0)
    option(YCM_USE_CMAKE_3_0_0 "Use modules from CMake 3.0.0" ON)
    mark_as_advanced(YCM_USE_CMAKE_3_0_0)
    if(YCM_USE_CMAKE_3_0_0)
        list(APPEND YCM_MODULE_PATH "${YCM_MODULE_DIR}/cmake-3.0.0/Modules")
    endif()
endif()

if(EXISTS "${YCM_MODULE_DIR}/cmake-2.8.12"
   AND CMAKE_MINIMUM_REQUIRED_VERSION VERSION_LESS 2.8.12
   AND CMAKE_VERSION VERSION_LESS 2.8.12)
    option(YCM_USE_CMAKE_2_8_12 "Use modules from CMake 2.8.12" ON)
    mark_as_advanced(YCM_USE_CMAKE_2_8_12)
    if(YCM_USE_CMAKE_2_8_12)
        list(APPEND YCM_MODULE_PATH "${YCM_MODULE_DIR}/cmake-2.8.12/Modules")
    endif()
endif()

if(EXISTS "${YCM_MODULE_DIR}/cmake-2.8.8"
   AND CMAKE_MINIMUM_REQUIRED_VERSION VERSION_LESS 2.8.8
   AND CMAKE_VERSION VERSION_LESS 2.8.8)
    option(YCM_USE_CMAKE_2_8_8 "Use modules from CMake 2.8.8" ON)
    mark_as_advanced(YCM_USE_CMAKE_2_8_8)
    if(YCM_USE_CMAKE_2_8_8)
        list(APPEND YCM_MODULE_PATH "${YCM_MODULE_DIR}/cmake-2.8.8/Modules")
    endif()
endif()

set(YCM_NO_DEPRECATED 1)
if(EXISTS "${YCM_MODULE_DIR}/deprecated")
    option(YCM_USE_DEPRECATED "Use YCM deprecated modules" ON)
    mark_as_advanced(YCM_USE_DEPRECATED)
    if(YCM_USE_DEPRECATED)
        list(APPEND YCM_MODULE_PATH "${YCM_MODULE_DIR}/deprecated")
        set(YCM_NO_DEPRECATED 0)
    endif()
endif()

list(APPEND CMAKE_MODULE_PATH "${YCM_MODULE_PATH}")


if(COMMAND set_package_properties)
    set_package_properties(YCM PROPERTIES DESCRIPTION "A collection of CMake modules and utilities for YARP and friends"
                                          URL "https://github.com/robotology/ycm")
endif()
